/* soapStub.h
   Generated by gSOAP 2.8.22 from LicWebService.h

Copyright(C) 2000-2015, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#include <vector>
#define SOAP_NAMESPACE_OF_ns1	"http://www.humkyung.co.kr/LicWebService/"
#include "stdsoap2.h"
#if GSOAP_VERSION != 20822
# error "GSOAP VERSION 20822 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (8)
/* Base64 schema type: */
class SOAP_CMAC xsd__base64Binary
{
public:
	unsigned char *__ptr;
	int __size;
	char *id;	/* optional element of type xsd:string */
	char *type;	/* optional element of type xsd:string */
	char *options;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 8; } /* = unique type id SOAP_TYPE_xsd__base64Binary */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__base64Binary() { xsd__base64Binary::soap_default(NULL); }
	virtual ~xsd__base64Binary() { }
};
#endif

#ifndef SOAP_TYPE_ns1__LMSStuctType
#define SOAP_TYPE_ns1__LMSStuctType (13)
/* ns1:LMSStuctType */
class SOAP_CMAC ns1__LMSStuctType
{
public:
	int size;	/* required element of type xsd:int */
	xsd__base64Binary *buf;	/* optional element of type xsd:base64Binary */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 13; } /* = unique type id SOAP_TYPE_ns1__LMSStuctType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__LMSStuctType() { ns1__LMSStuctType::soap_default(NULL); }
	virtual ~ns1__LMSStuctType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__Login
#define SOAP_TYPE__ns1__Login (14)
/* ns1:Login */
class SOAP_CMAC _ns1__Login
{
public:
	ns1__LMSStuctType *oLMS;	/* required element of type ns1:LMSStuctType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 14; } /* = unique type id SOAP_TYPE__ns1__Login */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__Login() { _ns1__Login::soap_default(NULL); }
	virtual ~_ns1__Login() { }
};
#endif

#ifndef SOAP_TYPE__ns1__LoginResponse
#define SOAP_TYPE__ns1__LoginResponse (15)
/* ns1:LoginResponse */
class SOAP_CMAC _ns1__LoginResponse
{
public:
	ns1__LMSStuctType *LoginResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:LMSStuctType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 15; } /* = unique type id SOAP_TYPE__ns1__LoginResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__LoginResponse() { _ns1__LoginResponse::soap_default(NULL); }
	virtual ~_ns1__LoginResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__IsValidToken
#define SOAP_TYPE__ns1__IsValidToken (16)
/* ns1:IsValidToken */
class SOAP_CMAC _ns1__IsValidToken
{
public:
	ns1__LMSStuctType *oLMS;	/* required element of type ns1:LMSStuctType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 16; } /* = unique type id SOAP_TYPE__ns1__IsValidToken */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__IsValidToken() { _ns1__IsValidToken::soap_default(NULL); }
	virtual ~_ns1__IsValidToken() { }
};
#endif

#ifndef SOAP_TYPE__ns1__IsValidTokenResponse
#define SOAP_TYPE__ns1__IsValidTokenResponse (17)
/* ns1:IsValidTokenResponse */
class SOAP_CMAC _ns1__IsValidTokenResponse
{
public:
	bool IsValidTokenResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 17; } /* = unique type id SOAP_TYPE__ns1__IsValidTokenResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__IsValidTokenResponse() { _ns1__IsValidTokenResponse::soap_default(NULL); }
	virtual ~_ns1__IsValidTokenResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__Logout
#define SOAP_TYPE__ns1__Logout (18)
/* ns1:Logout */
class SOAP_CMAC _ns1__Logout
{
public:
	ns1__LMSStuctType *oLMS;	/* required element of type ns1:LMSStuctType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 18; } /* = unique type id SOAP_TYPE__ns1__Logout */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__Logout() { _ns1__Logout::soap_default(NULL); }
	virtual ~_ns1__Logout() { }
};
#endif

#ifndef SOAP_TYPE__ns1__LogoutResponse
#define SOAP_TYPE__ns1__LogoutResponse (19)
/* ns1:LogoutResponse */
class SOAP_CMAC _ns1__LogoutResponse
{
public:
	ns1__LMSStuctType *LogoutResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:LMSStuctType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 19; } /* = unique type id SOAP_TYPE__ns1__LogoutResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__LogoutResponse() { _ns1__LogoutResponse::soap_default(NULL); }
	virtual ~_ns1__LogoutResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__Reset
#define SOAP_TYPE__ns1__Reset (20)
/* ns1:Reset */
class SOAP_CMAC _ns1__Reset
{
public:
	ns1__LMSStuctType *oLMS;	/* required element of type ns1:LMSStuctType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 20; } /* = unique type id SOAP_TYPE__ns1__Reset */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__Reset() { _ns1__Reset::soap_default(NULL); }
	virtual ~_ns1__Reset() { }
};
#endif

#ifndef SOAP_TYPE__ns1__ResetResponse
#define SOAP_TYPE__ns1__ResetResponse (21)
/* ns1:ResetResponse */
class SOAP_CMAC _ns1__ResetResponse
{
public:
	ns1__LMSStuctType *ResetResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:LMSStuctType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 21; } /* = unique type id SOAP_TYPE__ns1__ResetResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__ResetResponse() { _ns1__ResetResponse::soap_default(NULL); }
	virtual ~_ns1__ResetResponse() { }
};
#endif

#ifndef SOAP_TYPE___ns1__Login
#define SOAP_TYPE___ns1__Login (28)
/* Operation wrapper: */
struct __ns1__Login
{
public:
	_ns1__Login *ns1__Login;	/* optional element of type ns1:Login */
public:
	int soap_type() const { return 28; } /* = unique type id SOAP_TYPE___ns1__Login */
};
#endif

#ifndef SOAP_TYPE___ns1__IsValidToken
#define SOAP_TYPE___ns1__IsValidToken (32)
/* Operation wrapper: */
struct __ns1__IsValidToken
{
public:
	_ns1__IsValidToken *ns1__IsValidToken;	/* optional element of type ns1:IsValidToken */
public:
	int soap_type() const { return 32; } /* = unique type id SOAP_TYPE___ns1__IsValidToken */
};
#endif

#ifndef SOAP_TYPE___ns1__Logout
#define SOAP_TYPE___ns1__Logout (36)
/* Operation wrapper: */
struct __ns1__Logout
{
public:
	_ns1__Logout *ns1__Logout;	/* optional element of type ns1:Logout */
public:
	int soap_type() const { return 36; } /* = unique type id SOAP_TYPE___ns1__Logout */
};
#endif

#ifndef SOAP_TYPE___ns1__Reset
#define SOAP_TYPE___ns1__Reset (40)
/* Operation wrapper: */
struct __ns1__Reset
{
public:
	_ns1__Reset *ns1__Reset;	/* optional element of type ns1:Reset */
public:
	int soap_type() const { return 40; } /* = unique type id SOAP_TYPE___ns1__Reset */
};
#endif

#ifndef SOAP_TYPE___ns1__Login_
#define SOAP_TYPE___ns1__Login_ (42)
/* Operation wrapper: */
struct __ns1__Login_
{
public:
	_ns1__Login *ns1__Login;	/* optional element of type ns1:Login */
public:
	int soap_type() const { return 42; } /* = unique type id SOAP_TYPE___ns1__Login_ */
};
#endif

#ifndef SOAP_TYPE___ns1__IsValidToken_
#define SOAP_TYPE___ns1__IsValidToken_ (44)
/* Operation wrapper: */
struct __ns1__IsValidToken_
{
public:
	_ns1__IsValidToken *ns1__IsValidToken;	/* optional element of type ns1:IsValidToken */
public:
	int soap_type() const { return 44; } /* = unique type id SOAP_TYPE___ns1__IsValidToken_ */
};
#endif

#ifndef SOAP_TYPE___ns1__Logout_
#define SOAP_TYPE___ns1__Logout_ (46)
/* Operation wrapper: */
struct __ns1__Logout_
{
public:
	_ns1__Logout *ns1__Logout;	/* optional element of type ns1:Logout */
public:
	int soap_type() const { return 46; } /* = unique type id SOAP_TYPE___ns1__Logout_ */
};
#endif

#ifndef SOAP_TYPE___ns1__Reset_
#define SOAP_TYPE___ns1__Reset_ (48)
/* Operation wrapper: */
struct __ns1__Reset_
{
public:
	_ns1__Reset *ns1__Reset;	/* optional element of type ns1:Reset */
public:
	int soap_type() const { return 48; } /* = unique type id SOAP_TYPE___ns1__Reset_ */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (49)
/* SOAP Header: */
struct SOAP_ENV__Header
{
public:
	int soap_type() const { return 49; } /* = unique type id SOAP_TYPE_SOAP_ENV__Header */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (50)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
public:
	int soap_type() const { return 50; } /* = unique type id SOAP_TYPE_SOAP_ENV__Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (52)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
public:
	int soap_type() const { return 52; } /* = unique type id SOAP_TYPE_SOAP_ENV__Detail */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (55)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 55; } /* = unique type id SOAP_TYPE_SOAP_ENV__Reason */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (56)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
public:
	int soap_type() const { return 56; } /* = unique type id SOAP_TYPE_SOAP_ENV__Fault */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#endif

/* End of soapStub.h */
